// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`console should log a console error message when a children node has a forbidden property 1`] = `
"Invalid options provided:
{
  \\"elements\\": {
    \\"icon\\": {
      \\"html\\": {
        \\"tagName\\": \\"div\\",
        \\"children\\": [
          {
            \\"type\\": \\"element\\",
            \\"tagName\\": \\"div\\",
            \\"properties\\": {
              \\"class\\": \\"foo\\"
            }
          }
        ]
      }
    }
  }
}

returned:
{
  \\"error\\": {
    \\"isJoi\\": true,
    \\"name\\": \\"ValidationError\\",
    \\"details\\": [
      {
        \\"message\\": \\"\\\\\\"class\\\\\\" is not allowed\\",
        \\"path\\": [
          \\"elements\\",
          \\"icon\\",
          \\"html\\",
          \\"children\\",
          0,
          \\"properties\\",
          \\"class\\"
        ],
        \\"type\\": \\"any.unknown\\",
        \\"context\\": {
          \\"key\\": \\"class\\",
          \\"label\\": \\"class\\"
        }
      }
    ],
    \\"_object\\": {
      \\"elements\\": {
        \\"icon\\": {
          \\"html\\": {
            \\"tagName\\": \\"div\\",
            \\"children\\": [
              {
                \\"type\\": \\"element\\",
                \\"tagName\\": \\"div\\",
                \\"properties\\": {
                  \\"class\\": \\"foo\\"
                }
              }
            ]
          }
        }
      }
    }
  },
  \\"value\\": {
    \\"elements\\": {
      \\"icon\\": {
        \\"html\\": {
          \\"tagName\\": \\"div\\",
          \\"children\\": [
            {
              \\"type\\": \\"element\\",
              \\"tagName\\": \\"div\\",
              \\"properties\\": {
                \\"class\\": \\"foo\\"
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`console should log a console error message when a comment node hasn't a value 1`] = `
"Invalid options provided:
{
  \\"elements\\": {
    \\"icon\\": {
      \\"html\\": {
        \\"tagName\\": \\"div\\",
        \\"children\\": [
          {
            \\"type\\": \\"comment\\"
          }
        ]
      }
    }
  }
}

returned:
{
  \\"error\\": {
    \\"isJoi\\": true,
    \\"name\\": \\"ValidationError\\",
    \\"details\\": [
      {
        \\"message\\": \\"\\\\\\"value\\\\\\" is required\\",
        \\"path\\": [
          \\"elements\\",
          \\"icon\\",
          \\"html\\",
          \\"children\\",
          0,
          \\"value\\"
        ],
        \\"type\\": \\"any.required\\",
        \\"context\\": {
          \\"key\\": \\"value\\",
          \\"label\\": \\"value\\"
        }
      }
    ],
    \\"_object\\": {
      \\"elements\\": {
        \\"icon\\": {
          \\"html\\": {
            \\"tagName\\": \\"div\\",
            \\"children\\": [
              {
                \\"type\\": \\"comment\\"
              }
            ]
          }
        }
      }
    }
  },
  \\"value\\": {
    \\"elements\\": {
      \\"icon\\": {
        \\"html\\": {
          \\"tagName\\": \\"div\\",
          \\"children\\": [
            {
              \\"type\\": \\"comment\\"
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`console should log a console error message when a text node hasn't a value 1`] = `
"Invalid options provided:
{
  \\"elements\\": {
    \\"icon\\": {
      \\"html\\": {
        \\"tagName\\": \\"div\\",
        \\"children\\": [
          {
            \\"type\\": \\"text\\"
          }
        ]
      }
    }
  }
}

returned:
{
  \\"error\\": {
    \\"isJoi\\": true,
    \\"name\\": \\"ValidationError\\",
    \\"details\\": [
      {
        \\"message\\": \\"\\\\\\"value\\\\\\" is required\\",
        \\"path\\": [
          \\"elements\\",
          \\"icon\\",
          \\"html\\",
          \\"children\\",
          0,
          \\"value\\"
        ],
        \\"type\\": \\"any.required\\",
        \\"context\\": {
          \\"key\\": \\"value\\",
          \\"label\\": \\"value\\"
        }
      }
    ],
    \\"_object\\": {
      \\"elements\\": {
        \\"icon\\": {
          \\"html\\": {
            \\"tagName\\": \\"div\\",
            \\"children\\": [
              {
                \\"type\\": \\"text\\"
              }
            ]
          }
        }
      }
    }
  },
  \\"value\\": {
    \\"elements\\": {
      \\"icon\\": {
        \\"html\\": {
          \\"tagName\\": \\"div\\",
          \\"children\\": [
            {
              \\"type\\": \\"text\\"
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`console should log a console error message when an element node has a dashed property 1`] = `
"Invalid options provided:
{
  \\"elements\\": {
    \\"icon\\": {
      \\"html\\": {
        \\"tagName\\": \\"div\\",
        \\"children\\": [
          {
            \\"type\\": \\"element\\",
            \\"tagName\\": \\"div\\",
            \\"properties\\": {
              \\"t-a\\": \\"huu\\"
            }
          }
        ]
      }
    }
  }
}

returned:
{
  \\"error\\": {
    \\"isJoi\\": true,
    \\"name\\": \\"ValidationError\\",
    \\"details\\": [
      {
        \\"message\\": \\"\\\\\\"t-a\\\\\\" is not allowed\\",
        \\"path\\": [
          \\"elements\\",
          \\"icon\\",
          \\"html\\",
          \\"children\\",
          0,
          \\"properties\\",
          \\"t-a\\"
        ],
        \\"type\\": \\"object.allowUnknown\\",
        \\"context\\": {
          \\"child\\": \\"t-a\\",
          \\"key\\": \\"t-a\\",
          \\"label\\": \\"t-a\\"
        }
      }
    ],
    \\"_object\\": {
      \\"elements\\": {
        \\"icon\\": {
          \\"html\\": {
            \\"tagName\\": \\"div\\",
            \\"children\\": [
              {
                \\"type\\": \\"element\\",
                \\"tagName\\": \\"div\\",
                \\"properties\\": {
                  \\"t-a\\": \\"huu\\"
                }
              }
            ]
          }
        }
      }
    }
  },
  \\"value\\": {
    \\"elements\\": {
      \\"icon\\": {
        \\"html\\": {
          \\"tagName\\": \\"div\\",
          \\"children\\": [
            {
              \\"type\\": \\"element\\",
              \\"tagName\\": \\"div\\",
              \\"properties\\": {
                \\"t-a\\": \\"huu\\"
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`console should log a console error message when an element node hasn't a tagName 1`] = `
"Invalid options provided:
{
  \\"elements\\": {
    \\"icon\\": {
      \\"html\\": {
        \\"tagName\\": \\"div\\",
        \\"children\\": [
          {
            \\"type\\": \\"element\\"
          }
        ]
      }
    }
  }
}

returned:
{
  \\"error\\": {
    \\"isJoi\\": true,
    \\"name\\": \\"ValidationError\\",
    \\"details\\": [
      {
        \\"message\\": \\"\\\\\\"tagName\\\\\\" is required\\",
        \\"path\\": [
          \\"elements\\",
          \\"icon\\",
          \\"html\\",
          \\"children\\",
          0,
          \\"tagName\\"
        ],
        \\"type\\": \\"any.required\\",
        \\"context\\": {
          \\"key\\": \\"tagName\\",
          \\"label\\": \\"tagName\\"
        }
      }
    ],
    \\"_object\\": {
      \\"elements\\": {
        \\"icon\\": {
          \\"html\\": {
            \\"tagName\\": \\"div\\",
            \\"children\\": [
              {
                \\"type\\": \\"element\\"
              }
            ]
          }
        }
      }
    }
  },
  \\"value\\": {
    \\"elements\\": {
      \\"icon\\": {
        \\"html\\": {
          \\"tagName\\": \\"div\\",
          \\"children\\": [
            {
              \\"type\\": \\"element\\"
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`console should log a console error message when an invalid schema is provided 1`] = `
"Invalid options provided:
{
  \\"elements\\": {
    \\"icon\\": {
      \\"html\\": {
        \\"tagName\\": \\"div\\",
        \\"children\\": [
          {
            \\"type\\": \\"grooow\\"
          }
        ]
      }
    }
  }
}

returned:
{
  \\"error\\": {
    \\"isJoi\\": true,
    \\"name\\": \\"ValidationError\\",
    \\"details\\": [
      {
        \\"message\\": \\"\\\\\\"type\\\\\\" with value \\\\\\"grooow\\\\\\" fails to match the hast node type pattern\\",
        \\"path\\": [
          \\"elements\\",
          \\"icon\\",
          \\"html\\",
          \\"children\\",
          0,
          \\"type\\"
        ],
        \\"type\\": \\"string.regex.name\\",
        \\"context\\": {
          \\"name\\": \\"hast node type\\",
          \\"pattern\\": {},
          \\"value\\": \\"grooow\\",
          \\"key\\": \\"type\\",
          \\"label\\": \\"type\\"
        }
      }
    ],
    \\"_object\\": {
      \\"elements\\": {
        \\"icon\\": {
          \\"html\\": {
            \\"tagName\\": \\"div\\",
            \\"children\\": [
              {
                \\"type\\": \\"grooow\\"
              }
            ]
          }
        }
      }
    }
  },
  \\"value\\": {
    \\"elements\\": {
      \\"icon\\": {
        \\"html\\": {
          \\"tagName\\": \\"div\\",
          \\"children\\": [
            {
              \\"type\\": \\"grooow\\"
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`console should log a console error message when the top-level node has a forbidden property 1`] = `
"Invalid options provided:
{
  \\"elements\\": {
    \\"icon\\": {
      \\"html\\": {
        \\"tagName\\": \\"div\\",
        \\"properties\\": {
          \\"class\\": \\"foo\\"
        }
      }
    }
  }
}

returned:
{
  \\"error\\": {
    \\"isJoi\\": true,
    \\"name\\": \\"ValidationError\\",
    \\"details\\": [
      {
        \\"message\\": \\"\\\\\\"class\\\\\\" is not allowed\\",
        \\"path\\": [
          \\"elements\\",
          \\"icon\\",
          \\"html\\",
          \\"properties\\",
          \\"class\\"
        ],
        \\"type\\": \\"any.unknown\\",
        \\"context\\": {
          \\"key\\": \\"class\\",
          \\"label\\": \\"class\\"
        }
      }
    ],
    \\"_object\\": {
      \\"elements\\": {
        \\"icon\\": {
          \\"html\\": {
            \\"tagName\\": \\"div\\",
            \\"properties\\": {
              \\"class\\": \\"foo\\"
            }
          }
        }
      }
    }
  },
  \\"value\\": {
    \\"elements\\": {
      \\"icon\\": {
        \\"html\\": {
          \\"tagName\\": \\"div\\",
          \\"properties\\": {
            \\"class\\": \\"foo\\"
          }
        }
      }
    }
  }
}"
`;
